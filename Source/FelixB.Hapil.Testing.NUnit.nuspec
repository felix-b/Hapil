<?xml version="1.0" encoding="utf-8"?>
<package xmlns="http://schemas.microsoft.com/packaging/2011/08/nuspec.xsd">
    <metadata>
        <id>FelixB.Hapil.Testing.NUnit</id>
        <version>0.9.27</version>
        <title>Hapil.Testing.NUnit</title>
        <authors>Felix Berman</authors>
        <licenseUrl>https://github.com/felix-b/Hapil/blob/master/LICENSE</licenseUrl>
        <projectUrl>https://github.com/felix-b/Hapil</projectUrl>
        <iconUrl>http://nwheelsdotorg.files.wordpress.com/2014/12/felixb-hapil-32x32.png</iconUrl>
        <requireLicenseAcceptance>false</requireLicenseAcceptance>
        <description>
          Hapil is a dynamic MSIL generation library, which serves a back-end for the following design techniques:
          - CoI - Convention-over-Implementation
          - Aspect-Oriented Programming, through decoration
          - [planned] Subject-Oriented Programming, via mix-ins
          - [planned] Duck Typing
          Hapil provides a base test class for unit testing code generators built with Hapil. Hapil.Testing.NUnit adapts the base test class to NUnit testing framework.
        </description>
        <summary>Hapil is a .NET dynamic type generator library, which serves a back-end for the Convention-over-Implementation approach</summary>
        <copyright>Copyright © 2013-2015 Felix Berman</copyright>
        <tags>CoI IL MSIL Dynamic AOP Aspect Mix-in Duck</tags>
      <dependencies>
        <dependency id="FelixB.Hapil" version="0.9.27" />
      </dependencies>
    </metadata>
    <files>
        <file src="Bin\Hapil.Testing.NUnit.dll" target="lib\net45\Hapil.Testing.NUnit.dll" />
        <file src="Bin\Hapil.Testing.NUnit.pdb" target="lib\net45\Hapil.Testing.NUnit.pdb" />
        <file src="..\LICENSE" target="lib\net45\LICENSE" />
    </files>
</package>